// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(uuid())
  username String @unique
  email String @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tasks Task[]
  timelogs Timelog[]
  usersChallenges UsersChallenges[]
  rewards Reward[]

  @@map("users")
}

model Task{
  id Int @id @default(autoincrement())
  title String
  description String
  dueDate DateTime
  completed Boolean
  createdAt DateTime @default(now())

  // FK
  idUser String

  user User @relation(fields: [idUser], references: [id])
  timelogs Timelog[]
  
  @@map("tasks")
}

model Timelog{
  id Int @id @default(autoincrement())
  startTime DateTime
  endTime DateTime
  duration Int

  //FK
  idUser String
  idTask Int

  user User @relation(fields: [idUser], references: [id])
  task Task @relation(fields: [idTask], references: [id])

  @@map("timelogs")
}

model Challenge{
  id Int @id @default(autoincrement())
  title String
  description String
  points Int

  startDate DateTime
  endDate DateTime

  userChallenges UsersChallenges[]

  @@map("challenges")
}

model UsersChallenges{
  id String @id @default(uuid())
  status String

  // FKs
  idUser String
  idChallenge Int
  
  completedAt DateTime?

  user User @relation(fields: [idUser], references: [id])
  challenge Challenge @relation(fields: [idChallenge], references: [id])

  @@map("usersChallenges")
}

model Reward{
  id String @id @default(uuid())
  points Int
  createdAt DateTime @default(now())

  // FK
  idRewardType Int
  idUser String

  rewardType RewardType @relation(fields: [idRewardType], references: [id])
  user User @relation(fields: [idUser], references: [id])

  @@map("rewards")
}

model RewardType{
  id Int @id @default(autoincrement())
  reward String

  rewards Reward[]
  @@map("rewardTypes")
}